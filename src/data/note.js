export const noteList = [
	{
		id: 1,
		question: "Що таке реакт?",
		answer: "Це відкрита JavaScript бібліотека, яка допомагає створювати інтерфейси користувача для вебсайтів. Її головна задача — легко оновлювати окремі частини сторінки без потреби перезавантажувати всю сторінку, що дуже корисно для односторінкових застосунків. ",
	},
	{
		id: 2,
		question: "Що таке React Fiber? ",
		answer: "Це механізм який забезпечує можливість асинхронного рендерингу та кращого управління пріоритетами завдань. Він дає змогу створювати більш продуктивні та плавні інтерфейси, особливо для додатків зі складною логікою рендерингу або інтерактивними елементами. ",
	},
	{
		id: 3,
		question: "Яка різниця між React та ReactDOM? ",
		answer: "React — це бібліотека для створення компонентів користувацького інтерфейсу, відповідальна за опис структури компонентів та управління станом. ReactDOM — це бібліотека для рендерингу React-компонентів у реальний DOM браузера. React займається логікою компонентів, тоді як ReactDOM відповідає за їх вставку в HTML-документ. ",
	},
	{
		id: 4,
		question: "Різниця між тіньовим та віртуальним DOM? ",
		answer: "Тіньовий DOM ізолює HTML і CSS компонентів, не впливаючи на інші частини сторінки. Він забезпечує захист стилів і поведінки від зовнішнього впливу. Віртуальний DOM — це копія реального DOM, яку React використовує для ефективного оновлення інтерфейсу. Він порівнює зміни у віртуальному DOM і оновлює лише змінені частини реального DOM, що підвищує продуктивність. ",
	},
	{
		id: 5,
		question: "Для чого атрибут key при рендері списків? ",
		answer: "Для того, щоб кожен елемент у списку мав унікальний ідентифікатор. Це допомагає React швидко зрозуміти, які елементи змінюються, додаються або видаляються, і оновлювати тільки ті частини списку, які змінилися. Без key React може неправильно оновлювати список або працювати повільніше. ",
	},
	{
		id: 6,
		question: "Що таке React Reconciliation?",
		answer: "Це процес, за допомогою якого React оптимізує оновлення компонентів в інтерфейсі. Він використовує алгоритм порівняння (diffing) для визначення змін між старим і новим деревом компонентів, що дозволяє мінімізувати кількість необхідних оновлень. Ключі (keys) у списках допомагають React ідентифікувати елементи, які змінилися. Завдяки цьому процесу підвищується продуктивність і швидкість рендерингу. ",
	}
];